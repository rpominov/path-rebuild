// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("./Jest.bs.js");
var Curry = require("@rescript/std/lib/js/curry.js");
var Js_exn = require("@rescript/std/lib/js/js_exn.js");
var Belt_Result = require("@rescript/std/lib/js/belt_Result.js");
var PathRebuild = require("../PathRebuild.bs.js");

function msg(err) {
  if (err.TAG === /* Ok */0) {
    return Js_exn.raiseError("Not a Error(_)");
  } else {
    return err._0;
  }
}

Jest.each([
      "test/{1..0}/{-2}.js",
      "test/{2..1}/{-2}.js",
      "test/{-1..1}/{-2}.js",
      "test/{-1..-2}/{-2}.js",
      "test/{1..0a}/{-2}.js",
      "test/{0a}/{-2}.js",
      "{-2}.js\\",
      "foo/{-2..",
      "test/{1..2.1}/{-2}.js",
      "test/{1...2}/{-2}.js",
      "test/{1.2}/{-2}.js",
      "test/{1\\..2}/{-2}.js",
      "test/{1{..2}/{-2}.js",
      "test/{1/..2}/{-2}.js",
      "test}/{1..2}/{-2}.js"
    ], "Parse errors", (function (pattern) {
        expect(msg(PathRebuild.make(pattern))).toMatchSnapshot();
        
      }));

Jest.each2([
      [
        "{0..-3}/{-2}.js",
        "file.sql"
      ],
      [
        "{0..-4}/{-2}.js",
        "a/b/c/d/file.sql"
      ]
    ], "Transform", (function (pattern, path) {
        var transform = Belt_Result.getExn(PathRebuild.make(pattern));
        expect(Belt_Result.getExn(Curry._2(transform, "/", path))).toMatchSnapshot();
        
      }));

test("Unconventional separator", (function () {
        var transform = Belt_Result.getExn(PathRebuild.make("{0..-4}/{-2}.js"));
        expect(Belt_Result.getExn(Curry._2(transform, "#", "a#b#c#d#file.sql"))).toMatchSnapshot();
        
      }));

test("Default separator", (function () {
        var transform = Belt_Result.getExn(PathRebuild.make("{0..-4}/{-2}.js"));
        expect(Belt_Result.getExn(Curry._2(transform, undefined, "a/b/c/d/file.sql"))).toEqual("a/b/c/file.js");
        
      }));

test("Absolute path", (function () {
        var transform = Belt_Result.getExn(PathRebuild.make("{0..-3}/{-2}.js"));
        expect(msg(Curry._2(transform, undefined, "/file.sql"))).toMatchSnapshot();
        
      }));

exports.msg = msg;
/*  Not a pure module */
